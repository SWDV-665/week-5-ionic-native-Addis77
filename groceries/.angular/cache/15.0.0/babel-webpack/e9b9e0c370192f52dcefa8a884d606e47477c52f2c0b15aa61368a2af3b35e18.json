{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"./groceries.service\";\nexport let ModalControllerService = /*#__PURE__*/(() => {\n  class ModalControllerService {\n    constructor(alertCtrl, groceriesService) {\n      this.alertCtrl = alertCtrl;\n      this.groceriesService = groceriesService;\n      console.log('Hello InputDialogServiceProvider Provider');\n    }\n    showPrompot(item, index) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const prompt = yield this.alertCtrl.create({\n          header: item ? 'Edit Item' : \"Add Item\",\n          message: item ? \"Please Edit item...\" : \"Please enter item name...\",\n          inputs: [{\n            name: 'name',\n            placeholder: 'Item Name',\n            value: item ? item.name : null\n          }, {\n            name: 'quantity',\n            placeholder: 'Item quantity',\n            value: item ? item.quantity : null\n          }],\n          buttons: [{\n            text: 'Cancel',\n            handler: data => {\n              console.log('Cancel clicked');\n            }\n          }, {\n            text: 'Save',\n            handler: item => {\n              console.log('Saved clicked', item);\n              if (index !== undefined) {\n                this.groceriesService.editItem(item, index);\n              } else {\n                this.groceriesService.addItem(item);\n              }\n            }\n          }]\n        });\n        prompt.present();\n      });\n    }\n  }\n  ModalControllerService.ɵfac = function ModalControllerService_Factory(t) {\n    return new (t || ModalControllerService)(i0.ɵɵinject(i1.AlertController), i0.ɵɵinject(i2.GroceriesService));\n  };\n  ModalControllerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ModalControllerService,\n    factory: ModalControllerService.ɵfac,\n    providedIn: 'root'\n  });\n  return ModalControllerService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}