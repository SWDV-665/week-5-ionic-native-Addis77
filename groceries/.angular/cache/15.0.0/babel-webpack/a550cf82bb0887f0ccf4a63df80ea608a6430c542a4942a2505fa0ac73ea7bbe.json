{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"./groceries.service\";\nexport class ModalControllerService {\n  constructor(alertCtrl, groceriesService) {\n    this.alertCtrl = alertCtrl;\n    this.groceriesService = groceriesService;\n    console.log('Hello InputDialogServiceProvider Provider');\n  }\n  showPrompot(item, index) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const prompt = yield this.alertCtrl.create({\n        header: item ? 'Edit Item' : \"Add Item\",\n        message: item ? \"Please Edit item...\" : \"Please enter item name...\",\n        inputs: [{\n          name: 'name',\n          placeholder: 'Item Name',\n          value: item ? item.name : null\n        }, {\n          name: 'quantity',\n          placeholder: 'Item quantity',\n          value: item ? item.quantity : null\n        }],\n        buttons: [{\n          text: 'Cancel',\n          handler: data => {\n            console.log('Cancel clicked');\n          }\n        }, {\n          text: 'Save',\n          handler: item => {\n            console.log('Saved clicked', item);\n            if (index !== undefined) {\n              this.groceriesService.editItem(item, index);\n            } else {\n              this.groceriesService.addItem(item);\n            }\n          }\n        }]\n      });\n      prompt.present();\n    });\n  }\n}\nModalControllerService.ɵfac = function ModalControllerService_Factory(t) {\n  return new (t || ModalControllerService)(i0.ɵɵinject(i1.AlertController), i0.ɵɵinject(i2.GroceriesService));\n};\nModalControllerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ModalControllerService,\n  factory: ModalControllerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AAOA,OAAM,MAAOA,sBAAsB;EAEjCC,YAAmBC,SAA0B,EAASC,gBAAkC;IAArE,cAAS,GAATD,SAAS;IAA0B,qBAAgB,GAAhBC,gBAAgB;IACpEC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;EAC1D;EAEMC,WAAW,CAACC,IAAS,EAAEC,KAAU;;MACrC,MAAMC,MAAM,GAAE,MAAM,IAAI,CAACP,SAAS,CAACQ,MAAM,CAAC;QACxCC,MAAM,EAACJ,IAAI,GAAG,WAAW,GAAC,UAAU;QACpCK,OAAO,EAAEL,IAAI,GAAG,qBAAqB,GAAE,2BAA2B;QAClEM,MAAM,EAAE,CACN;UACEC,IAAI,EAAE,MAAM;UACZC,WAAW,EAAE,WAAW;UACxBC,KAAK,EAACT,IAAI,GAAGA,IAAI,CAACO,IAAI,GAAG;SAC1B,EACD;UACEA,IAAI,EAAE,UAAU;UAChBC,WAAW,EAAE,eAAe;UAC5BC,KAAK,EAACT,IAAI,GAAGA,IAAI,CAACU,QAAQ,GAAE;SAC7B,CACF;QACDC,OAAO,EAAE,CACP;UACEC,IAAI,EAAE,QAAQ;UACdC,OAAO,EAAEC,IAAI,IAAG;YACdjB,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;UAC/B;SACD,EACD;UACEc,IAAI,EAAE,MAAM;UACZC,OAAO,EAAEb,IAAI,IAAG;YACdH,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEE,IAAI,CAAC;YAAE,IAAIC,KAAK,KAAIc,SAAS,EAAC;cAC3D,IAAI,CAACnB,gBAAgB,CAACoB,QAAQ,CAAChB,IAAI,EAAEC,KAAK,CAAC;aAC5C,MACG;cACF,IAAI,CAACL,gBAAgB,CAACqB,OAAO,CAACjB,IAAI,CAAC;;UAEvC;SACD;OAEF,CAAC;MACFE,MAAM,CAACgB,OAAO,EAAE;IAClB,CAAC;;;;mBA3CUzB,sBAAsB;AAAA;;SAAtBA,sBAAsB;EAAA0B,SAAtB1B,sBAAsB;EAAA2B,YAFrB;AAAM","names":["ModalControllerService","constructor","alertCtrl","groceriesService","console","log","showPrompot","item","index","prompt","create","header","message","inputs","name","placeholder","value","quantity","buttons","text","handler","data","undefined","editItem","addItem","present","factory","providedIn"],"sourceRoot":"","sources":["D:\\Personal\\Ionic\\barcode\\ionic-capacitor-barcode-scanner\\src\\app\\services\\modal-controller.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { GroceriesService } from './groceries.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalControllerService {\n\n  constructor(public alertCtrl: AlertController, public groceriesService: GroceriesService) {\n    console.log('Hello InputDialogServiceProvider Provider');\n  }\n  \n  async showPrompot(item?:any, index?:any) {\n    const prompt =await this.alertCtrl.create({\n      header:item ? 'Edit Item':\"Add Item\",\n      message: item ? \"Please Edit item...\": \"Please enter item name...\",\n      inputs: [\n        {\n          name: 'name',\n          placeholder: 'Item Name',\n          value:item ? item.name : null\n        },\n        {\n          name: 'quantity',\n          placeholder: 'Item quantity',\n          value:item ? item.quantity: null\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          handler: data => {\n            console.log('Cancel clicked');\n          }\n        },\n        {\n          text: 'Save',\n          handler: item => {\n            console.log('Saved clicked', item); if (index !==undefined){\n            this.groceriesService.editItem(item, index);\n          }\n          else{\n            this.groceriesService.addItem(item);\n          }\n        }\n      }\n      ]\n    });\n    prompt.present();\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}